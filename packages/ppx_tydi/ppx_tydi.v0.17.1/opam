opam-version: "2.0"
maintainer: "Jane Street developers"
authors: ["Jane Street Group, LLC"]
homepage: "https://github.com/janestreet/ppx_tydi"
bug-reports: "https://github.com/janestreet/ppx_tydi/issues"
dev-repo: "git+https://github.com/janestreet/ppx_tydi.git"
doc: "https://ocaml.janestreet.com/ocaml-core/latest/doc/ppx_tydi/index.html"
license: "MIT"
build: [
  ["dune" "build" "-p" name "-j" jobs]
]
depends: [
  "ocaml"  {>= "5.1.0"}
  "base"   {>= "v0.17" & < "v0.18"}
  "dune"   {>= "3.11.0"}
  "ppxlib" {>= "0.36.0"}
]
available: arch != "arm32" & arch != "x86_32"
synopsis: "Let expressions, inferring pattern type from expression."
description: "
Provides a ppx for [let%tydi]: type-directed [let] bindings. In [let%tydi a = b in ...], [a]'s type is inferred from [b] rather than the other way around. This is convenient for record patterns whose fields are not in scope.
"
url {
  src:
    "https://github.com/janestreet/ppx_tydi/archive/refs/tags/v0.17.1.tar.gz"
  checksum: [
    "md5=6adffe5f073bc33bbbdbf3c39fe36959"
    "sha512=f4af5b32a537cb72ffc6a331f73e90eb650e6116ca130d785eda78fb9de5764a1d990ff6929fd6fb695bfeb35d2685f4b35c344125208733b08953ca13410cc5"
  ]
}
